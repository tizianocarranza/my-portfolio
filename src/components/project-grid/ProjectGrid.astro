---
interface Props {
    title: string,
    description: string,
    technologies: string,
    notes?: string[],
    link: string,
}

const { title, description, technologies, link, notes = [] } = Astro.props;

---

<div class="grid grid-cols-1 grid-rows-2 h-full p-5 grid-container overflow-hidden md:grid-cols-2 text-left">

    <div class="flex flex-col h-full w-full items-center lg:items-start justify-center gap-5 md:col-start-2">
        <div class="flex flex-col items-center md:items-start w-full">
            <h1 class="text-3xl md:text-5xl text-detail">{title}</h1>
            <div class="flex items-start gap-2 ml-0.5">
                
                { Array.isArray(notes) && notes.length > 0 && 
            notes.map(note => (
                <p class="text-sm">{note}</p>
            ))
        }
        </div>
        </div>
        <a target="_blank" href={link} class="bg-detail text-white h-8 w-20 text-center">Visit</a>
    </div>

    <div class="hidden md:flex flex-col h-full w-full items-end justify-center row-start-2 md:col-start-2">
        <p class="w-full text-sm md:w-2/3">{technologies}</p>
        <p class=" w-full text-lg md:w-2/3">{description}</p>
    </div>

    <div class="flex flex-col md:row-span-2 md:col-start-1 max-h-72 md:max-h-96 md:row-start-1">
        <slot />
    </div>
</div>


